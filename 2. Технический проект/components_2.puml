@startuml
title "C4. Компоненты: Микросервис товаров (productService)"

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Component(apiGateway, "API Gateway", "Nginx", "Маршрутизация запросов к микросервисам")

System_Boundary(productService, "Микросервис товаров") {
    Component(controller, "Контроллер товаров", "Go", "Обрабатывает HTTP-запросы, поступающие через API Gateway")
    Component(service, "Сервис товаров", "Go", "Реализует бизнес-логику управления товарами")
    Component(repository, "Репозиторий товаров", "Go", "Работает с базой данных товаров")
    Component(cacheClient, "Клиент кеша", "Redis Client", "Читает и записывает данные в кеш")
    Component(storageClient, "Клиент объектного хранилища", "S3 Client", "Загружает изображения товаров в Яндекс.Облако")
    Component(eventClient, "Клиент событий", "RabbitMQ Client", "Публикует события в шину RabbitMQ")
    Component(absRepository, "Абстрактный репозиторий товаров", "", "")
    Component(absEventClient, "Абстрактный клиент событий", "", "")
    Component(absStorageClient, "Абстрактный клиент объектного хранилища", "")
    Component(absCacheClient, "Абстрактный клиент кеша", "", "")


}

System_Ext(redis, "Кеш", "[Redis]\nКеширование данных о товарах")
System_Ext(productDb, "База данных товаров", "[PostgreSQL]\nШардированная база данных товаров")
System_Ext(objectStorage, "Объектное хранилище", "[Яндекс.Облако]\nХранение изображений товаров")
System_Ext(eventBus, "Шина событий", "[RabbitMQ]\nАсинхронное взаимодействие между сервисами")

Rel(apiGateway, controller, "Передаёт запросы на выполнение операций")

Rel(controller, service, "Передаёт запросы на выполнение операций")
Rel(service, absRepository, "Работает с данными в базе товаров")
Rel(absRepository, repository, "",) 
Rel(service, absCacheClient, "Читает/записывает данные в кеш")
Rel(absCacheClient, cacheClient, "")
Rel(service, absStorageClient, "Загружает изображения товаров")
Rel(absStorageClient, storageClient, "")
Rel(service, absEventClient, "Публикует события (например, 'товар создан')")
Rel(absEventClient, eventClient, "")
Rel(repository, productDb, "Читает/записывает данные о товарах")
Rel(cacheClient, redis, "Читает/записывает данные")
Rel(storageClient, objectStorage, "Сохраняет и читает изображения")
Rel(eventClient, eventBus, "Публикует события (например, 'товар обновлён')")
@enduml
